!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("baseButterchurnPresets",[],t):"object"==typeof exports?exports.baseButterchurnPresets=t():e.baseButterchurnPresets=t()}(self,(()=>(()=>{var e={785:(e,t,a)=>{var n={"./json/test-1.json":729};function r(e){var t=_(e);return a(t)}function _(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}r.keys=function(){return Object.keys(n)},r.resolve=_,e.exports=r,r.id=785},447:(e,t,a)=>{var n={"./json/test-2.json":702};function r(e){var t=_(e);return a(t)}function _(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}r.keys=function(){return Object.keys(n)},r.resolve=_,e.exports=r,r.id=447},729:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0003,"warp":0.01,"sy":1.1046,"ob_size":0.003,"ob_r":0.05,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.20068,"tex_ang":2.51327,"tex_zoom":4.91382,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":" ","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"textured":1,"x":0.24,"y":0.8,"rad":0.11046,"tex_zoom":4.44841,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a[\'wzoom\'] = 0; a[\'q6\'] = 0; a[\'q1\'] = 0; a[\'q5\'] = 0; a[\'ry\'] = 0; a[\'q4\'] = 0; a[\'rx\'] = 0; a[\'q2\'] = 0; a[\'q3\'] = 0;","frame_eqs_str":"a[\'wzoom\']=(0.18*Math.sin(a[\'time\'])); a[\'q3\']=a[\'wzoom\']; a[\'q1\']=(0.5+(0.3*Math.sin((-a[\'time\']*2)))); a[\'q2\']=(0.5+(0.3*Math.cos(-a[\'time\']))); a[\'ob_r\']=(a[\'ob_r\']+(0.05*((0.6*Math.sin((a[\'time\']*1.3)))+(0.4*Math.sin((0.98*a[\'time\'])))))); a[\'ob_b\']=(a[\'ob_b\']+(0.05*((0.6*Math.sin((a[\'time\']*1.1)))+(0.4*Math.sin((0.78*a[\'time\'])))))); a[\'ob_g\']=(a[\'ob_g\']+(0.05*((0.6*Math.sin((a[\'time\']*1.2)))+(0.4*Math.sin((0.6*a[\'time\'])))))); a[\'rx\']=(0.5+(0.25*Math.sin((a[\'time\']*0.25)))); a[\'ry\']=(0.5+(0.25*Math.sin((a[\'time\']*0.5)))); a[\'q4\']=a[\'rx\']; a[\'q5\']=a[\'ry\']; a[\'q6\']=(1+(1*Math.sin((a[\'time\']*0.5))));","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//Disturbed - Deify\\n\\nwzoom = 0.18*sin(time);\\nq3=wzoom;\\nq1 = 0.5 + 0.3*sin(-time*2);\\nq2 = 0.5 + 0.3*cos(-time);\\n\\nob_r = ob_r + 0.05*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nob_b = ob_b + 0.05*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nob_g = ob_g + 0.05*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nrx = 0.5+0.25*sin(time*0.25);\\nry = 0.5+0.25*sin(time*0.5);\\nq4=rx;\\nq5=ry;\\n\\nq6 = 1+1*sin(time*0.5);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uxy_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - vec2(0.5, 0.5)) * vec2(2.0, 2.0));\\n  uxy_1 = tmpvar_3;\\n  float tmpvar_4;\\n  tmpvar_4 = sqrt(((tmpvar_3.x * tmpvar_3.x) + (tmpvar_3.y * tmpvar_3.y)));\\n  float tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (min (abs(\\n    (tmpvar_3.y / tmpvar_3.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.y / tmpvar_3.x)\\n  ), 1.0));\\n  float tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\\n  tmpvar_7 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\\n  tmpvar_7 = (tmpvar_7 + (float(\\n    (abs((tmpvar_3.y / tmpvar_3.x)) > 1.0)\\n  ) * (\\n    (tmpvar_7 * -2.0)\\n   + 1.570796)));\\n  tmpvar_5 = (tmpvar_7 * sign((tmpvar_3.y / tmpvar_3.x)));\\n  if ((abs(tmpvar_3.x) > (1e-08 * abs(tmpvar_3.y)))) {\\n    if ((tmpvar_3.x < 0.0)) {\\n      if ((tmpvar_3.y >= 0.0)) {\\n        tmpvar_5 += 3.141593;\\n      } else {\\n        tmpvar_5 = (tmpvar_5 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_5 = (sign(tmpvar_3.y) * 1.570796);\\n  };\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_5 * 1.91);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (pow (tmpvar_4, 3.14159) * cos((tmpvar_8 * 3.14159)));\\n  tmpvar_9.y = (pow (tmpvar_4, 3.14159) * sin((tmpvar_8 * 3.14159)));\\n  uxy_1 = (tmpvar_9 + tmpvar_2);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (texture (sampler_fc_main, uxy_1).xyz + 0.01);\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 plastic_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q1;\\n  tmpvar_6.y = q2;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.x;\\n  tmpvar_7.y = tmpvar_5.x;\\n  vec2 x_8;\\n  x_8 = ((uv - (tmpvar_7 * 4.0)) - tmpvar_6);\\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_8, x_8)), 0.5)\\n  )));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.y;\\n  tmpvar_9.y = tmpvar_5.y;\\n  vec2 x_10;\\n  x_10 = ((uv - (tmpvar_9 * 4.0)) - tmpvar_6);\\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_10, x_10)), 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_4.z;\\n  tmpvar_11.y = tmpvar_5.z;\\n  vec2 x_12;\\n  x_12 = ((uv - (tmpvar_11 * 4.0)) - tmpvar_6);\\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_12, x_12)), 0.5)\\n  )));\\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\\n  ret_2 = (ret_2 * 3.0);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }","warp_hlsl":"shader_body\\n{\\n\\n    //based on the equation F(Z) = Z ^ pi + C\\n        \\n    float2 zoom = 2;\\n    float2 c = float2(q4, q5);\\n    \\n    float2 uxy = (float2(uv.x-0.5, uv.y-0.5))*zoom;\\n\\n    //change *1 to control h and v size of the fractal without screwing it up\\n    float moduz = sqrt(uxy.x*uxy.x*1 + uxy.y*uxy.y*1);\\n\\n    //change *1.91 to control how many \\"arms\\" it has\\n    //most values won\'t line up at 2pi, try *2 for instance, then try *2.55\\n    float thetaz = atan2(uxy.y, uxy.x)*1.91;\\n\\n\\n    uxy = (float2((pow(moduz, 3.14159)*cos(thetaz*3.14159)), (pow(moduz, 3.14159)*sin(thetaz*3.14159))))+c;\\n    \\n \\n    ret = tex2D(sampler_fc_main, uxy).xyz +0.01;    \\n        \\n}","comp_hlsl":"shader_body \\n{ \\n    //flexi\'s bump map effect\\n\\n    float2 d = texsize.zw*8; \\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) ); \\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) ); \\n    float2 light_pos = float2(q1,q2); \\n    float3 col = float3(4,4,4); \\n    float c = 4; \\n    float dd = 16; \\n    float3 plastic; \\n    plastic.x = col.x/(1+dd*pow(length( uv - float2(dx.x,dy.x)*c - light_pos),0.5)); \\n    plastic.y = col.y/(1+dd*pow(length( uv - float2(dx.y,dy.y)*c - light_pos),0.5)); \\n    plastic.z = col.z/(1+dd*pow(length( uv - float2(dx.z,dy.z)*c - light_pos),0.5)); \\n\\n    ret = plastic*GetPixel(uv); \\n    ret *= 3;\\n}","meta":{"presetName":"cope - specimen 184","hash":"1dc2b95377fca1e7bcb305c910dfab0a"}}')},702:e=>{"use strict";e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"a[\'z\'] = 0; a[\'t1\'] = 0; a[\'q6\'] = 0; a[\'q1\'] = 0; a[\'t3\'] = 0; a[\'t2\'] = 0; a[\'q2\'] = 0; a[\'q7\'] = 0; a[\'q8\'] = 0; a[\'t1\']=0.5; a[\'t2\']=0.5;","frame_eqs_str":"","point_eqs_str":"a[\'x\']=((1.4*Math.sin((a[\'q2\']*a[\'t2\'])))-(a[\'t3\']*Math.cos((0.5*a[\'t1\'])))); a[\'y\']=((a[\'t3\']*Math.sin((-a[\'q1\']*a[\'t1\'])))-Math.cos((-0.5*a[\'t2\']))); a[\'z\']=(1*Math.sin(a[\'t1\'])); a[\'t1\']=a[\'x\']; a[\'t2\']=a[\'y\']; a[\'t3\']=a[\'z\']; a[\'x\']=((a[\'x\']*0.4)+0.45); a[\'y\']=((a[\'y\']*0.4)+0.8); a[\'r\']=a[\'q8\']; a[\'b\']=a[\'q7\']; a[\'g\']=a[\'q6\'];","init_eqs_eel":"t1=0.5;\\nt2=0.5;","frame_eqs_eel":"","point_eqs_eel":"//x = a*sin(b*y) - z*cos(c*x); \\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\n\\n//y = z*sin(d*x) - cos(e*y); \\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\n\\n//z = f*sin(x);\\nz = 1*sin(t1);\\n\\n\\n//transmit the x,y,z positions to the next point\\nt1=x;\\nt2=y;\\nt3=z;\\n\\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\nr = q8;\\nb = q7;\\ng = q6;"},{"baseVals":{"a":0.07,"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"\\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\nz = 1*sin(t1);\\n\\nt1=x;\\nt2=y;\\nt3=z;\\n\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\n\\nr = q8;\\nb = q7;\\ng = q6;","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\nz = 1*sin(t1);\\n\\nt1=x;\\nt2=y;\\nt3=z;\\n\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\n\\nr = q8;\\nb = q7;\\ng = q6;"},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_str":"","frame_eqs_str":"","point_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_str":"a[\'q1\'] = 0; a[\'q2\'] = 0; a[\'q3\'] = 0; a[\'q8\'] = 0; a[\'q7\'] = 0; a[\'q6\'] = 0;","frame_eqs_str":"a[\'q1\']=-Math.abs((1*Math.sin((a[\'time\']*0.3)))); a[\'q2\']=(1*Math.sin((a[\'time\']*0.45))); a[\'q3\']=(1*Math.cos((a[\'time\']*0.6))); a[\'wave_r\']=(a[\'wave_r\']+(0.45*((0.6*Math.sin((a[\'time\']*1.3)))+(0.4*Math.sin((0.98*a[\'time\'])))))); a[\'wave_b\']=(a[\'wave_b\']+(0.45*((0.6*Math.sin((a[\'time\']*1.1)))+(0.4*Math.sin((0.78*a[\'time\'])))))); a[\'wave_g\']=(a[\'wave_g\']+(0.45*((0.6*Math.sin((a[\'time\']*1.2)))+(0.4*Math.sin((0.6*a[\'time\'])))))); a[\'q8\']=1; a[\'q7\']=1; a[\'q6\']=1; a[\'warp\']=0; a[\'zoom\']=1;","pixel_eqs_str":"","init_eqs_eel":"","frame_eqs_eel":"//keep q1 negative, that\'s where the interesting shape is\\nq1= -abs(1*sin(time*0.3));\\nq2= 1*sin(time*0.45);\\nq3= 1*cos(time*0.6);\\n\\n\\nwave_r = wave_r + 0.45*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.45*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.45*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\n//q8=wave_r;\\n//q7=wave_g;\\n//q6=wave_b;\\nq8=1;\\nq7=1;\\nq6=1;\\n\\nwarp = 0;\\nzoom = 1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_2.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_fc_main, (uv + (\\n    (tmpvar_2 * texsize.zw)\\n   * 6.0))).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xxx - 0.5)\\n   * 0.04) - 0.008));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  ret_2 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\\n  uv_1 = (uv * (1.0 + (0.1 * \\n    ((texture (sampler_blur1, clamp (ret_2, 0.0, 1.0).xy).xyz * scale1) + bias1)\\n  )).xy);\\n  uv_1 = (uv_1 - (0.05 * (\\n    (texture (sampler_blur1, clamp (ret_2, 0.0, 1.0).xy).xyz * scale1)\\n   + bias1)).xy);\\n  ret_2 = (texture (sampler_main, uv_1).xyz * pow (hue_shader, vec3(3.0, 3.0, 3.0)));\\n  ret_2 = (ret_2 * 1.5);\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }","warp_hlsl":"shader_body\\n{\\n    float2 d = texsize.zw * 2;\\n    float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );\\n    float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );\\nfloat2 my_uv = uv + float2(lum(dx),lum(dy))*texsize.zw*6;\\nfloat2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 1.2 + rand_frame.xy;\\n\\nret = tex2d(sampler_fc_main, my_uv);\\nret += (tex2D(sampler_noise_lq, dither_uv).xxx-0.5) *0.04 - 0.008;\\n\\n}","comp_hlsl":"shader_body\\n{\\n \\nret = GetBlur3(uv);\\n\\nuv *= (1+.1*GetBlur1(saturate(ret)));\\nuv -= .05*GetBlur1(saturate(ret));\\n\\nret = tex2D(sampler_main,uv);\\n\\nret *= pow(hue_shader,3);\\n    ret *= 1.50; //gamma\\n    ret *= ret; //darken\\n}","meta":{"presetName":"cope - strange attractor [flexis let it grow mix] (janky ripple effects)","hash":"ebb2124866369680c64ccbe366d3a50f"}}')}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var _=t[n]={exports:{}};return e[n](_,_.exports,a),_.exports}a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{"use strict";a.r(n);const e={"test-1":a(785)("./json/test-1.json"),"test-2":a(447)("./json/test-2.json")};n.default=e})(),n})()));